apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-02-22T00:20:54Z"
    generateName: elasticsearch-v1-data-
    labels:
      app: elasticsearch
      component: data
      controller-revision-hash: elasticsearch-v1-data-698bd6bf4d
      release: elasticsearch-v1
      role: data
      statefulset.kubernetes.io/pod-name: elasticsearch-v1-data-0
    name: elasticsearch-v1-data-0
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: elasticsearch-v1-data
      uid: b7e99674-3637-11e9-bba2-9600001bfa15
    resourceVersion: "180501"
    selfLink: /api/v1/namespaces/elasticsearch/pods/elasticsearch-v1-data-0
    uid: b7f161a0-3637-11e9-bba2-9600001bfa15
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: elasticsearch
                component: data
                release: elasticsearch-v1
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: DISCOVERY_SERVICE
        value: elasticsearch-v1-discovery
      - name: NODE_MASTER
        value: "false"
      - name: PROCESSORS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ES_JAVA_OPTS
        value: '-Djava.net.preferIPv4Stack=true -Xms1536m -Xmx1536m  '
      - name: MINIMUM_MASTER_NODES
        value: "2"
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - /post-start-hook.sh
        preStop:
          exec:
            command:
            - /bin/bash
            - /pre-stop-hook.sh
      name: elasticsearch
      ports:
      - containerPort: 9300
        name: transport
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /_cluster/health?local=true
          port: 9200
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
        requests:
          cpu: 25m
          memory: 1536Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/elasticsearch/data
        name: data
      - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
        name: config
        subPath: elasticsearch.yml
      - mountPath: /pre-stop-hook.sh
        name: config
        subPath: pre-stop-hook.sh
      - mountPath: /post-start-hook.sh
        name: config
        subPath: post-start-hook.sh
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: elasticsearch-v1-data-token-9v54g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: elasticsearch-v1-data-0
    initContainers:
    - command:
      - sysctl
      - -w
      - vm.max_map_count=262144
      image: busybox:latest
      imagePullPolicy: Always
      name: sysctl
      resources: {}
      securityContext:
        privileged: true
        procMount: Default
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: elasticsearch-v1-data-token-9v54g
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
          chown -R elasticsearch:elasticsearch $datadir;
        done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
          chown -R elasticsearch:elasticsearch $logfile;
        done
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imagePullPolicy: IfNotPresent
      name: chown
      resources: {}
      securityContext:
        procMount: Default
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/elasticsearch/data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: elasticsearch-v1-data-token-9v54g
        readOnly: true
    nodeName: kube-manager-master
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
    serviceAccount: elasticsearch-v1-data
    serviceAccountName: elasticsearch-v1-data
    subdomain: elasticsearch-v1-data
    terminationGracePeriodSeconds: 3600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-elasticsearch-v1-data-0
    - configMap:
        defaultMode: 420
        name: elasticsearch-v1
      name: config
    - name: elasticsearch-v1-data-token-9v54g
      secret:
        defaultMode: 420
        secretName: elasticsearch-v1-data-token-9v54g
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T00:37:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T01:22:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T01:22:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T00:37:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0d9e594a69443def4fb238f94293efdd79ffb588f43a1cba1a03a4723cd58a14
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imageID: docker-pullable://docker.elastic.co/elasticsearch/elasticsearch-oss@sha256:220a9a988288baf446e36d74aa93eb747c086c63e9f23717679fac37ca603cc5
      lastState:
        terminated:
          containerID: docker://496699d94107556c6efa7a7a5211204d7a96849a80475e7f63b7f5e53ebed3c3
          exitCode: 137
          finishedAt: "2019-02-22T01:20:06Z"
          reason: Error
          startedAt: "2019-02-22T01:13:37Z"
      name: elasticsearch
      ready: true
      restartCount: 6
      state:
        running:
          startedAt: "2019-02-22T01:20:28Z"
    hostIP: 116.203.105.49
    initContainerStatuses:
    - containerID: docker://b94498ac5791f47386cd6350d6756c8f66210de7b6cb1069bf2457678137f8be
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:061ca9704a714ee3e8b80523ec720c64f6209ad3f97c0ff7cb9ec7d19f15149f
      lastState: {}
      name: sysctl
      ready: true
      restartCount: 2
      state:
        terminated:
          containerID: docker://b94498ac5791f47386cd6350d6756c8f66210de7b6cb1069bf2457678137f8be
          exitCode: 0
          finishedAt: "2019-02-22T01:20:12Z"
          reason: Completed
          startedAt: "2019-02-22T01:20:12Z"
    - containerID: docker://0b4600ed0abe1157a4581b5b85d3bf07941878ce6d5c12d50484cd9e81ea9146
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imageID: docker-pullable://docker.elastic.co/elasticsearch/elasticsearch-oss@sha256:220a9a988288baf446e36d74aa93eb747c086c63e9f23717679fac37ca603cc5
      lastState: {}
      name: chown
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://0b4600ed0abe1157a4581b5b85d3bf07941878ce6d5c12d50484cd9e81ea9146
          exitCode: 0
          finishedAt: "2019-02-22T01:20:12Z"
          reason: Completed
          startedAt: "2019-02-22T01:20:12Z"
    phase: Running
    podIP: 10.32.0.16
    qosClass: Burstable
    startTime: "2019-02-22T00:37:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2019-02-22T00:20:54Z"
    generateName: elasticsearch-v1-master-
    labels:
      app: elasticsearch
      component: master
      controller-revision-hash: elasticsearch-v1-master-8fb5b7d49
      release: elasticsearch-v1
      role: master
      statefulset.kubernetes.io/pod-name: elasticsearch-v1-master-0
    name: elasticsearch-v1-master-0
    namespace: elasticsearch
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: elasticsearch-v1-master
      uid: b7ec58fb-3637-11e9-bba2-9600001bfa15
    resourceVersion: "180496"
    selfLink: /api/v1/namespaces/elasticsearch/pods/elasticsearch-v1-master-0
    uid: b8031f78-3637-11e9-bba2-9600001bfa15
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: elasticsearch
                component: master
                release: elasticsearch-v1
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: NODE_DATA
        value: "false"
      - name: DISCOVERY_SERVICE
        value: elasticsearch-v1-discovery
      - name: PROCESSORS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      - name: ES_JAVA_OPTS
        value: '-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m  '
      - name: MINIMUM_MASTER_NODES
        value: "2"
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imagePullPolicy: IfNotPresent
      name: elasticsearch
      ports:
      - containerPort: 9300
        name: transport
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /_cluster/health?local=true
          port: 9200
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
        requests:
          cpu: 25m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/elasticsearch/data
        name: data
      - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
        name: config
        subPath: elasticsearch.yml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: elasticsearch-v1-master-token-2slkt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: elasticsearch-v1-master-0
    initContainers:
    - command:
      - sysctl
      - -w
      - vm.max_map_count=262144
      image: busybox:latest
      imagePullPolicy: Always
      name: sysctl
      resources: {}
      securityContext:
        privileged: true
        procMount: Default
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: elasticsearch-v1-master-token-2slkt
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
          chown -R elasticsearch:elasticsearch $datadir;
        done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
          chown -R elasticsearch:elasticsearch $logfile;
        done
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imagePullPolicy: IfNotPresent
      name: chown
      resources: {}
      securityContext:
        procMount: Default
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/elasticsearch/data
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: elasticsearch-v1-master-token-2slkt
        readOnly: true
    nodeName: kube-manager-master
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
    serviceAccount: elasticsearch-v1-master
    serviceAccountName: elasticsearch-v1-master
    subdomain: elasticsearch-v1-master
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: data
      persistentVolumeClaim:
        claimName: data-elasticsearch-v1-master-0
    - configMap:
        defaultMode: 420
        name: elasticsearch-v1
      name: config
    - name: elasticsearch-v1-master-token-2slkt
      secret:
        defaultMode: 420
        secretName: elasticsearch-v1-master-token-2slkt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T00:51:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T01:21:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T01:21:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2019-02-22T00:51:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://024a77123ca149ca0828bb86a27d800880ccbfe15a4f1c6b06cd9d72b299453f
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imageID: docker-pullable://docker.elastic.co/elasticsearch/elasticsearch-oss@sha256:220a9a988288baf446e36d74aa93eb747c086c63e9f23717679fac37ca603cc5
      lastState:
        terminated:
          containerID: docker://db5c37967025b862c4ec3a248f7e3ae437cc783cc4e994e25e2432fe1f08677b
          exitCode: 143
          finishedAt: "2019-02-22T01:20:09Z"
          reason: Error
          startedAt: "2019-02-22T01:15:24Z"
      name: elasticsearch
      ready: true
      restartCount: 3
      state:
        running:
          startedAt: "2019-02-22T01:20:35Z"
    hostIP: 116.203.105.49
    initContainerStatuses:
    - containerID: docker://38c2e649198fce18ced438226f53ad89b2893437f660a7b31d6a5a57a8257be7
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:061ca9704a714ee3e8b80523ec720c64f6209ad3f97c0ff7cb9ec7d19f15149f
      lastState: {}
      name: sysctl
      ready: true
      restartCount: 3
      state:
        terminated:
          containerID: docker://38c2e649198fce18ced438226f53ad89b2893437f660a7b31d6a5a57a8257be7
          exitCode: 0
          finishedAt: "2019-02-22T01:20:18Z"
          reason: Completed
          startedAt: "2019-02-22T01:20:18Z"
    - containerID: docker://8aa02e5c0fccb1a4df812deb431e9627c2880f55317c0fffbae8e7a0578a25e7
      image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
      imageID: docker-pullable://docker.elastic.co/elasticsearch/elasticsearch-oss@sha256:220a9a988288baf446e36d74aa93eb747c086c63e9f23717679fac37ca603cc5
      lastState: {}
      name: chown
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: docker://8aa02e5c0fccb1a4df812deb431e9627c2880f55317c0fffbae8e7a0578a25e7
          exitCode: 0
          finishedAt: "2019-02-22T01:20:19Z"
          reason: Completed
          startedAt: "2019-02-22T01:20:19Z"
    phase: Running
    podIP: 10.32.0.22
    qosClass: Burstable
    startTime: "2019-02-22T00:51:03Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
