apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: "2019-02-22T00:20:54Z"
    generation: 2
    labels:
      app: elasticsearch
      chart: elasticsearch-1.17.0
      component: data
      heritage: Tiller
      release: elasticsearch-v1
    name: elasticsearch-v1-data
    namespace: elasticsearch
    resourceVersion: "180886"
    selfLink: /apis/apps/v1/namespaces/elasticsearch/statefulsets/elasticsearch-v1-data
    uid: b7e99674-3637-11e9-bba2-9600001bfa15
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch
        component: data
        release: elasticsearch-v1
        role: data
    serviceName: elasticsearch-v1-data
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch
          component: data
          release: elasticsearch-v1
          role: data
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: elasticsearch
                    component: data
                    release: elasticsearch-v1
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: DISCOVERY_SERVICE
            value: elasticsearch-v1-discovery
          - name: NODE_MASTER
            value: "false"
          - name: PROCESSORS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: ES_JAVA_OPTS
            value: '-Djava.net.preferIPv4Stack=true -Xms1536m -Xmx1536m  '
          - name: MINIMUM_MASTER_NODES
            value: "2"
          image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                - /bin/bash
                - /post-start-hook.sh
            preStop:
              exec:
                command:
                - /bin/bash
                - /pre-stop-hook.sh
          name: elasticsearch
          ports:
          - containerPort: 9300
            name: transport
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 1536Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: data
          - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            name: config
            subPath: elasticsearch.yml
          - mountPath: /pre-stop-hook.sh
            name: config
            subPath: pre-stop-hook.sh
          - mountPath: /post-start-hook.sh
            name: config
            subPath: post-start-hook.sh
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sysctl
          - -w
          - vm.max_map_count=262144
          image: busybox:latest
          imagePullPolicy: Always
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
            procMount: Default
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /bin/bash
          - -c
          - |
            set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
              chown -R elasticsearch:elasticsearch $datadir;
            done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
              chown -R elasticsearch:elasticsearch $logfile;
            done
          image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
          imagePullPolicy: IfNotPresent
          name: chown
          resources: {}
          securityContext:
            procMount: Default
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: data
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: elasticsearch-v1-data
        serviceAccountName: elasticsearch-v1-data
        terminationGracePeriodSeconds: 3600
        volumes:
        - configMap:
            defaultMode: 420
            name: elasticsearch-v1
          name: config
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        dataSource: null
        resources:
          requests:
            storage: 30Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: elasticsearch-v1-data-698bd6bf4d
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updateRevision: elasticsearch-v1-data-698bd6bf4d
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: "2019-02-22T00:20:54Z"
    generation: 2
    labels:
      app: elasticsearch
      chart: elasticsearch-1.17.0
      component: master
      heritage: Tiller
      release: elasticsearch-v1
    name: elasticsearch-v1-master
    namespace: elasticsearch
    resourceVersion: "180554"
    selfLink: /apis/apps/v1/namespaces/elasticsearch/statefulsets/elasticsearch-v1-master
    uid: b7ec58fb-3637-11e9-bba2-9600001bfa15
  spec:
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: elasticsearch
        component: master
        release: elasticsearch-v1
        role: master
    serviceName: elasticsearch-v1-master
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: elasticsearch
          component: master
          release: elasticsearch-v1
          role: master
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: elasticsearch
                    component: master
                    release: elasticsearch-v1
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: NODE_DATA
            value: "false"
          - name: DISCOVERY_SERVICE
            value: elasticsearch-v1-discovery
          - name: PROCESSORS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          - name: ES_JAVA_OPTS
            value: '-Djava.net.preferIPv4Stack=true -Xms512m -Xmx512m  '
          - name: MINIMUM_MASTER_NODES
            value: "2"
          image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
          - containerPort: 9300
            name: transport
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 25m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: data
          - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
            name: config
            subPath: elasticsearch.yml
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sysctl
          - -w
          - vm.max_map_count=262144
          image: busybox:latest
          imagePullPolicy: Always
          name: sysctl
          resources: {}
          securityContext:
            privileged: true
            procMount: Default
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /bin/bash
          - -c
          - |
            set -e; set -x; chown elasticsearch:elasticsearch /usr/share/elasticsearch/data; for datadir in $(find /usr/share/elasticsearch/data -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
              chown -R elasticsearch:elasticsearch $datadir;
            done; chown elasticsearch:elasticsearch /usr/share/elasticsearch/logs; for logfile in $(find /usr/share/elasticsearch/logs -mindepth 1 -maxdepth 1 -not -name ".snapshot"); do
              chown -R elasticsearch:elasticsearch $logfile;
            done
          image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.4
          imagePullPolicy: IfNotPresent
          name: chown
          resources: {}
          securityContext:
            procMount: Default
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/elasticsearch/data
            name: data
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
        serviceAccount: elasticsearch-v1-master
        serviceAccountName: elasticsearch-v1-master
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: elasticsearch-v1
          name: config
    updateStrategy:
      type: OnDelete
    volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        dataSource: null
        resources:
          requests:
            storage: 4Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    collisionCount: 0
    currentReplicas: 1
    currentRevision: elasticsearch-v1-master-8fb5b7d49
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updateRevision: elasticsearch-v1-master-8fb5b7d49
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
